.drawer-overlay {
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
  background-color: rgb(225 226 230 / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.9;
  z-index: 9999999 !important;
}
.drawer-container {
  position: fixed;
  overflow-y: auto;
  border-radius: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  padding-left: 2rem;
  padding-right: 2rem;
  --tw-shadow: rgba(1, 42, 56, 0.25) 0px 4px 8px -2px, rgba(1, 42, 56, 0.08) 0px 0px 0px 1px;
  --tw-shadow-colored: 0px 4px 8px -2px var(--tw-shadow-color), 0px 0px 0px 1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 10000000 !important;
}
/* For right and left drawers */
.drawer-container.right {
  top: 0px;
  bottom: 0px;
  right: 0px;
  height: 100%;
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer-container.left {
  top: 0px;
  bottom: 0px;
  left: 0px;
  height: 100%;
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer-show.right,
  .drawer-show.left {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
/* For top and bottom drawers */
.drawer-container.top, .drawer-container.bottom {
  left: 0px;
  right: 0px;
  width: 100%;
  padding-right: 4rem;
}
.drawer-container.top {
  top: 0px;
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer-container.bottom {
  bottom: 0px;
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer-show.top, .drawer-show.bottom {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
/* Widths for right and left drawers */
.drawer-container.right.narrow, .drawer-container.left.narrow {
    width: 320px;
  }
.drawer-container.right.regular, .drawer-container.left.regular {
    width: 560px;
  }
.drawer-container.right.wide, .drawer-container.left.wide {
    width: 920px;
  }
/* Heights for top and bottom drawers */
.drawer-container.top.short, .drawer-container.bottom.short {
    height: 160px;
  }
.drawer-container.top.regular, .drawer-container.bottom.regular {
    height: 320px;
  }
.drawer-close-button {
  position: absolute;
  border-radius: 0.25rem;
  padding: 0.5rem;
}
.drawer-close-button:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(240 241 243 / var(--tw-bg-opacity));
}
.drawer-close-button svg {
  height: 1.25rem;
  width: 1.25rem;
}
.drawer-close-button {
  right: 0.75rem;
  top: 0.75rem;
  left: auto;
}
.drawer-content > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.drawer-content > div:first-of-type > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}